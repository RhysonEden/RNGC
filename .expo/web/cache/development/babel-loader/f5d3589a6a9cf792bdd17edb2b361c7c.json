{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Volumes/JavaScript/JavaScript/GC - React Native/src/screens/Card.js\";\n\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Card = function Card(_ref) {\n  var message = _ref.message,\n      setMessage = _ref.setMessage;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, message.map(function (mess, index) {\n    return React.createElement(View, {\n      style: styles.container,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    }, mess.gvrid), mess.prov == true ? React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, \"Active with Guardian Connect\") : React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, \"Provisioned, but not Active\"));\n  }));\n};\n\nexport default Card;\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 25,\n    textAlign: \"center\",\n    marginTop: 20\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    backgroundColor: \"#03e8fc\",\n    padding: 20,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 4\n  }\n});","map":{"version":3,"sources":["/Volumes/JavaScript/JavaScript/GC - React Native/src/screens/Card.js"],"names":["React","Card","message","setMessage","map","mess","index","styles","container","text","gvrid","prov","StyleSheet","create","fontSize","textAlign","marginTop","flex","justifyContent","backgroundColor","padding","margin","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA6B;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACxC,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP;AAAA,WACX,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAA+B,MAAA,GAAG,EAAEF,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BJ,IAAI,CAACK,KAAhC,CADF,EAEGL,IAAI,CAACM,IAAL,IAAa,IAAb,GACC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADD,GAGC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCALJ,CADW;AAAA,GAAZ,CADH,CADF;AAcD,CAfD;;AAiBA,eAAeR,IAAf;AAEA,IAAMM,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,EAAE;AACJK,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJC,IAAAA,SAAS,EAAE;AAHP,GADyB;AAM/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,eAFP;AAGTC,IAAAA,eAAe,EAAE,SAHR;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTC,IAAAA,MAAM,EAAE,EALC;AAMTC,IAAAA,WAAW,EAAE,MANJ;AAOTC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAPL;AAQTC,IAAAA,aAAa,EAAE,GARN;AASTC,IAAAA,YAAY,EAAE;AATL;AANoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { FlatList } from \"react-native\";\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\n\nconst Card = ({ message, setMessage }) => {\n  return (\n    <View>\n      {message.map((mess, index) => (\n        <View style={styles.container} key={index}>\n          <Text style={styles.text}>{mess.gvrid}</Text>\n          {mess.prov == true ? (\n            <Text style={styles.text}>Active with Guardian Connect</Text>\n          ) : (\n            <Text style={styles.text}>Provisioned, but not Active</Text>\n          )}\n        </View>\n      ))}\n    </View>\n  );\n};\n\nexport default Card;\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 25,\n    textAlign: \"center\",\n    marginTop: 20,\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"space-between\",\n    backgroundColor: \"#03e8fc\",\n    padding: 20,\n    margin: 10,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.8,\n    shadowRadius: 4,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}